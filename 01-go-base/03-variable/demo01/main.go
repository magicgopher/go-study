package main

import "fmt"

func main() {
	/*
		Go语言变量声明的三种方式
		第一种：指定变量数据类型，然后再赋值
			语法格式：var 变量名 数据类型 = 值
		第二种：类型推断
			语法格式：var 变量名 = 值
		第三种：简短定义
			语法格式：变量名 := 值
		第四种：同时定义多个变量
			方式一：以逗号分隔，声明与赋值分开，若不赋值，存在默认值。(用于定义同一种数据类型的变量)
				语法格式：var 变量名1, 变量名2, 变量名3, ..., 变量名n 数据类型 = 值1, 值2, 值3,..., 值n
			方式二：同时定义多个变量使用类型推断的方式(这种方式必须赋值，不能分开写)
				语法格式：var 变量名1, 变量名2, 变量名3, ..., 变量名n = 值1, 值2, 值3,..., 值n
			方式三：同时定义多个变量，省略var使用:=自动推断变量类型(简短定义)
				语法格式：变量名1, 变量名2, 变量名3, ..., 变量名n := 值1, 值2, 值3,..., 值n
		第五种：变量分组
			语法格式：
				var (
					变量名1 变量类型1 = 值1
					变量名2 变量类型2 = 值2
					变量名3 变量类型3 = 值3
					...
					变量名n 变量类型n = 值n
				)
	*/
	// 第一种：指定变量数据类型，然后再赋值
	// 写在一行
	var a int = 100
	fmt.Println("a:", a)

	// 分开写
	var b int
	b = 200
	fmt.Println("b:", b)

	// 第二种：类型推断
	var c = 300
	fmt.Println("c:", c)

	// 第三种：简短定义
	d := 400
	fmt.Println("d:", d)

	// 第四种：同时声明多个变量
	var e, f, g int = 500, 600, 700
	fmt.Println("e:", e)
	fmt.Println("f:", f)
	fmt.Println("g:", g)
}
